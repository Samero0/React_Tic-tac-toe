{"ast":null,"code":"var _jsxFileName = \"/home/alexander_fuentes/Documents/React-proyectos/tres-en-linea/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n\n//se le pasa value como parámetro para definir el valor que contendrá el botón\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // se define clase para css y para usar con react \n  // se aigna función para cuando se haga click\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n//función para definir el tablero con 9 botones Square\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // función para verificar si hay un ganador\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Ganador: \" + winner;\n  } else {\n    status = \"Siguiente jugador: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return; //si la casilla está ocupada, no se hace nada\n    }\n\n    //variable para intercambiar el estado del juego\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  return (\n    /*#__PURE__*/\n    // se crea el tablero con 3 filas y 3 columnas\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[0],\n          onSquareClick: () => handleClick(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[1],\n          onSquareClick: () => handleClick(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[2],\n          onSquareClick: () => handleClick(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[3],\n          onSquareClick: () => handleClick(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[4],\n          onSquareClick: () => handleClick(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[5],\n          onSquareClick: () => handleClick(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[6],\n          onSquareClick: () => handleClick(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[7],\n          onSquareClick: () => handleClick(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[8],\n          onSquareClick: () => handleClick(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [currentMove, setCurrentMove] = useState(0);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    //para que apunte a la ultima entrada del historial\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // variable para mostrar los movimientos realizados en el historial y poder \"saltar\" a un estado anterior\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Ir al movimiento #' + move;\n    } else {\n      description = 'Ir al inicio del juego';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  });\n  return (\n    /*#__PURE__*/\n    // estructura para mostrar el tablero y el historial de movimientos\n    _jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xIsNext: xIsNext,\n          squares: currentSquares,\n          onPlay: handlePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-play\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\"Estas en el movimiento: \", currentMove + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, this)\n  );\n}\n\n//no se detalla en la documentación pero se define la función para verificar si hay un ganador\n_s(Game, \"jEcMxXnlPUqafH0W1UBMjUD+Yok=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winner","calculateWinner","status","handleClick","i","nextSquares","slice","_c2","Game","_s","currentMove","setCurrentMove","history","setHistory","Array","fill","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/home/alexander_fuentes/Documents/React-proyectos/tres-en-linea/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\n//se le pasa value como parámetro para definir el valor que contendrá el botón\nfunction Square({ value, onSquareClick }) {\n  // se define clase para css y para usar con react \n  // se aigna función para cuando se haga click\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n//función para definir el tablero con 9 botones Square\nfunction Board({ xIsNext, squares, onPlay }) {\n  \n  // función para verificar si hay un ganador\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Ganador: \" + winner;\n  } else {\n    status = \"Siguiente jugador: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  function handleClick(i) {\n\n    if (squares[i] || calculateWinner(squares)) {\n      return;  //si la casilla está ocupada, no se hace nada\n    }\n    \n    //variable para intercambiar el estado del juego\n    const nextSquares = squares.slice();\n    if (xIsNext){\n      nextSquares[i] = \"X\";\n    } else{\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  return (\n    // se crea el tablero con 3 filas y 3 columnas\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\nexport default function Game() {\n  const [currentMove, setCurrentMove] = useState(0);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    //para que apunte a la ultima entrada del historial\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // variable para mostrar los movimientos realizados en el historial y poder \"saltar\" a un estado anterior\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Ir al movimiento #' + move;\n    } else {\n      description = 'Ir al inicio del juego';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    // estructura para mostrar el tablero y el historial de movimientos\n  <div className=\"game\">\n    <div className=\"game-board\">\n      <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n    </div>\n    <div className=\"current-play\">\n      <ol>Estas en el movimiento: {currentMove + 1}</ol>\n    </div>\n    <div className=\"game-info\">\n      <ol>{moves}</ol>\n    </div>\n  </div>\n  );\n}\n\n//no se detalla en la documentación pero se define la función para verificar si hay un ganador\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}